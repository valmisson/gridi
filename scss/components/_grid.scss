// Grid CSS
//
// Utilities of Grid Layout

@include make-component('grid') {
  &-cols {
    &-none {
      @include grid-cols-none;
    }

    // make component `.grid-cols-$i`
    @include make-sort-component using ($i) {
      @include grid-cols($i);
    }
  }

  &-rows {
    &-none {
      @include grid-rows-none;
    }

    // make component `.grid-rows-$i`
    @include make-sort-component($end: math.div($columns, 2)) using ($i) {
      @include grid-rows($i);
    }
  }

  &-flow {
    &-row {
      @include grid-flow-row;

      &-dense {
        @include grid-flow-row-dense;
      }
    }

    &-col {
      @include grid-flow-col;

      &-dense {
        @include grid-flow-col-dense;
      }
    }
  }
}

// Grid Column

@include make-component('col') {
  &-auto {
    @include col-auto;
  }

  &-span {
    &-full {
      @include col-span-full;
    }

    // make component `.col-span-$i`
    @include make-sort-component using ($i) {
      @include col-span($i);
    }
  }

  &-start {
    &-auto {
      @include col-start-auto;
    }

    // make component `.col-start-$i`
    @include make-sort-component($end: $columns + 1) using ($i) {
      @include col-start($i);
    }
  }

  &-end {
    &-auto {
      @include col-end-auto;
    }

    // make component `.col-end-$i`
    @include make-sort-component($end: $columns + 1) using ($i) {
      @include col-end($i);
    }
  }
}

// Grid Row

@include make-component('row') {
  &-auto {
    @include row-auto;
  }

  &-span {
    &-full {
      @include row-span-full;
    }

    // make component `.row-span-$i`
    @include make-sort-component($end: math.div($columns, 2)) using ($i) {
      @include row-span($i);
    }
  }

  &-start {
    &-auto {
      @include row-start-auto;
    }

    // make component `.row-start-$i`
    @include make-sort-component($end: math.div($columns, 2) + 1) using ($i) {
      @include row-start($i);
    }
  }

  &-end {
    &-auto {
      @include row-end-auto;
    }

    // make component `.row-end-$i`
    @include make-sort-component($end: math.div($columns, 2) + 1) using ($i) {
      @include row-end($i);
    }
  }
}

// Grid Auto Columns

@include make-component('auto') {
  &-cols {
    &-auto {
      @include auto-cols-auto;
    }

    &-min {
      @include auto-cols-min;
    }

    &-max {
      @include auto-cols-max;
    }

    &-fr {
      @include auto-cols-fr;
    }
  }

  &-rows {
    &-auto {
      @include auto-rows-auto;
    }

    &-min {
      @include auto-rows-min;
    }

    &-max {
      @include auto-rows-max;
    }

    &-fr {
      @include auto-rows-fr;
    }
  }
}

// Place Content

@include make-component('place') {
  &-content {
    &-center {
      @include place-content-center;
    }

    &-start {
      @include place-content-start;
    }

    &-end {
      @include place-content-end;
    }

    &-between {
      @include place-content-between;
    }

    &-around {
      @include place-content-around;
    }

    &-evenly {
      @include place-content-evenly;
    }

    &-stretch {
      @include place-content-stretch;
    }
  }

  &-items {
    &-start {
      @include place-items-start;
    }

    &-end {
      @include place-items-end;
    }

    &-center {
      @include place-items-center;
    }

    &-stretch {
      @include place-items-stretch;
    }
  }

  &-self {
    &-auto {
      @include place-self-auto;
    }

    &-start {
      @include place-self-start;
    }

    &-end {
      @include place-self-end;
    }

    &-center {
      @include place-self-center;
    }

    &-stretch {
      @include place-self-stretch;
    }
  }
}
