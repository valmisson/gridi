// Grid CSS
//
// Utilities of Grid Layout

@use 'sass:math';

@use '../utils/variables';
@use '../mixins/utilities';
@use '../mixins/grid';

@include utilities.make-component('grid') {
  &-cols {
    &-none {
      @include grid.grid-cols-none;
    }

    // make component `.grid-cols-$i`
    @include utilities.make-sort-component using ($i) {
      @include grid.grid-cols($i);
    }
  }

  &-rows {
    &-none {
      @include grid.grid-rows-none;
    }

    // make component `.grid-rows-$i`
    @include utilities.make-sort-component($end: math.div(variables.$columns, 2)) using ($i) {
      @include grid.grid-rows($i);
    }
  }

  &-flow {
    &-row {
      @include grid.grid-flow-row;

      &-dense {
        @include grid.grid-flow-row-dense;
      }
    }

    &-col {
      @include grid.grid-flow-col;

      &-dense {
        @include grid.grid-flow-col-dense;
      }
    }
  }
}

// Grid Column

@include utilities.make-component('col') {
  &-auto {
    @include grid.col-auto;
  }

  &-span {
    &-full {
      @include grid.col-span-full;
    }

    // make component `.col-span-$i`
    @include utilities.make-sort-component using ($i) {
      @include grid.col-span($i);
    }
  }

  &-start {
    &-auto {
      @include grid.col-start-auto;
    }

    // make component `.col-start-$i`
    @include utilities.make-sort-component($end: variables.$columns + 1) using ($i) {
      @include grid.col-start($i);
    }
  }

  &-end {
    &-auto {
      @include grid.col-end-auto;
    }

    // make component `.col-end-$i`
    @include utilities.make-sort-component($end: variables.$columns + 1) using ($i) {
      @include grid.col-end($i);
    }
  }
}

// Grid Row

@include utilities.make-component('row') {
  &-auto {
    @include grid.row-auto;
  }

  &-span {
    &-full {
      @include grid.row-span-full;
    }

    // make component `.row-span-$i`
    @include utilities.make-sort-component($end: math.div(variables.$columns, 2)) using ($i) {
      @include grid.row-span($i);
    }
  }

  &-start {
    &-auto {
      @include grid.row-start-auto;
    }

    // make component `.row-start-$i`
    @include utilities.make-sort-component($end: math.div(variables.$columns, 2) + 1) using ($i) {
      @include grid.row-start($i);
    }
  }

  &-end {
    &-auto {
      @include grid.row-end-auto;
    }

    // make component `.row-end-$i`
    @include utilities.make-sort-component($end: math.div(variables.$columns, 2) + 1) using ($i) {
      @include grid.row-end($i);
    }
  }
}

// Grid Auto Columns

@include utilities.make-component('auto') {
  &-cols {
    &-auto {
      @include grid.auto-cols-auto;
    }

    &-min {
      @include grid.auto-cols-min;
    }

    &-max {
      @include grid.auto-cols-max;
    }

    &-fr {
      @include grid.auto-cols-fr;
    }
  }

  &-rows {
    &-auto {
      @include grid.auto-rows-auto;
    }

    &-min {
      @include grid.auto-rows-min;
    }

    &-max {
      @include grid.auto-rows-max;
    }

    &-fr {
      @include grid.auto-rows-fr;
    }
  }
}

// Place Content

@include utilities.make-component('place') {
  &-content {
    &-center {
      @include grid.place-content-center;
    }

    &-start {
      @include grid.place-content-start;
    }

    &-end {
      @include grid.place-content-end;
    }

    &-between {
      @include grid.place-content-between;
    }

    &-around {
      @include grid.place-content-around;
    }

    &-evenly {
      @include grid.place-content-evenly;
    }

    &-stretch {
      @include grid.place-content-stretch;
    }
  }

  &-items {
    &-start {
      @include grid.place-items-start;
    }

    &-end {
      @include grid.place-items-end;
    }

    &-center {
      @include grid.place-items-center;
    }

    &-stretch {
      @include grid.place-items-stretch;
    }
  }

  &-self {
    &-auto {
      @include grid.place-self-auto;
    }

    &-start {
      @include grid.place-self-start;
    }

    &-end {
      @include grid.place-self-end;
    }

    &-center {
      @include grid.place-self-center;
    }

    &-stretch {
      @include grid.place-self-stretch;
    }
  }
}
